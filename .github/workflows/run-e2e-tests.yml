name: Starter E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [labeled, unlabeled, opened, edited, synchronize]

jobs:
  install:
    if: github.actor != 'github-actions[bot]'
    defaults:
      run:
        working-directory: ./examples/lastrev-next-starter
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.0-slim-chrome99-ff97
      options: --user 1001
    steps:
      # Enforce label on PR to prevent unnecesary testing
      - name: Enforce labels
        uses: mheap/github-action-required-labels@v1
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          mode: exactly
          count: 1
          labels: 'qa-ready'

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 16
        uses: actions/setup-node@master
        with:
          node-version: 16

      - name: Dependencies cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: Install project dependencies
        run: yarn --prefer-offline

      # report machine parameters
      - run: npx cypress info
      # - run: node -p 'os.cpus()'
      # - run: yarn types
      # - run: yarn lint
      # - run: yarn test:unit:ci
      # - run: yarn turbo run build

      # - name: Save build folder
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: build
      #     if-no-files-found: error
      #     path: build

  ui-chrome-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.0-slim-chrome99-ff97
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]

    steps:
      ## SETUP
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dependencies cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: ./node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: Install project dependencies
        run: yarn --prefer-offline

      ## RUN TESTS

      - name: 'E2E Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          install: false
          project: ./packages/component-library
          command: yarn turbo run test:e2e
          # wait-on: http://localhost:5338/percy/healthcheck
          # wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: 'UI - Chrome'

        env:
          CYPRESS_PROJECT_ID: ${{ secrets.LRCL_CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.LRCL_CYPRESS_RECORD_KEY }}
          PERCY_TOKEN: ${{ secrets.LRCL_PERCY_TOKEN }}
          PERCY_PARALLEL_NONCE: '${{ github.event_name }}-${{ github.sha }}'
          PERCY_PARALLEL_TOTAL: 5
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
