name: Starter E2E Tests

on:
  push:
    branches: [main]
    paths:
      - 'examples/lastrev-next-starter/**'
  pull_request:
    types: [labeled, unlabeled, opened, edited, synchronize]
    paths:
      - 'examples/lastrev-next-starter/**'
  # Used as a webhook event for publish success actions
  repository_dispatch:
  # Used to fire tests manually from Github
  workflow_dispatch:
    inputs:
      baseURL:
        default: 'https://starter.lastrev.com'
        type: string
        description: 'Base URL to run the test against'
        required: true
      environment:
        description: 'Environment to run the tests against'
        type: environment
        required: false
      parallelCount:
        description: 'Count of parallel instances to use'
        type: environment
        required: false

jobs:
  # Nonce for re-runs: https://docs.percy.io/docs/parallel-test-suites#github-actions
  nonce:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.nonce.outputs.result }}
    steps:
      - id: nonce
        run: echo "result=${{ github.run_id }}-$(date +%s)" >> $GITHUB_OUTPUT

  install:
    if: github.actor != 'github-actions[bot]'
    defaults:
      run:
        working-directory: ./examples/lastrev-next-starter
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.12.0-chrome-123.0.6312.86-1-ff-124.0.2-edge-123.0.2420.97-1
      options: --user 1001
    steps:
      # Enforce label on PR to prevent unnecesary testing
      - name: Enforce labels
        uses: mheap/github-action-required-labels@v5
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          mode: exactly
          count: 1
          labels: 'qa-ready'

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Dependencies cache
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
            ~/.pnpm-store
          key: ${{ runner.os }}-starter-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-starter-pnpm-

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: Install project dependencies
        run: pnpm install --frozen-lockfile

      # report machine parameters
      - run: npx cypress info
      # - run: node -p 'os.cpus()'
      # - run: pnpm types
      # - run: pnpm lint
      # - run: pnpm test:unit:ci
      # - run: pnpm turbo run build

      # - name: Save build folder
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: build
      #     if-no-files-found: error
      #     path: build

  ui-chrome-tests:
    defaults:
      run:
        working-directory: ./examples/lastrev-next-starter
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node-20.12.0-chrome-123.0.6312.86-1-ff-124.0.2-edge-123.0.2420.97-1
      options: --user 1001
    needs:
      - install
      - nonce

    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4, 5]

    steps:
      ## SETUP
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Dependencies cache
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
            ~/.pnpm-store
          key: ${{ runner.os }}-starter-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-starter-pnpm-

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v4
        with:
          path: ./examples/lastrev-next-starter/node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: Install project dependencies
        run: pnpm install --frozen-lockfile

      ## RUN TESTS
      - name: Wait for Netlify Deploy Preview Commit
        uses: jlevy-io/wait-for-netlify-deploy-with-headers@3.0.2
        id: wait-for-netflify-preview
        with:
          site_id: ${{ secrets.STARTER_NETLIFY_SITE_ID }}
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}

      - name: 'Website Tests - Chrome'
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./examples/lastrev-next-starter
          install: false
          project: ./packages/web
          command-prefix: 'percy exec -- npx'
          # wait-on: http://localhost:5338/percy/healthcheck
          # wait-on-timeout: 120
          browser: chrome
          record: true
          parallel: true
          group: 'UI - Chrome'

        env:
          SITE: ${{ secrets.SITE }}
          CYPRESS_BASE_URL: ${{ steps.wait-for-netflify-preview.outputs.url }}
          CYPRESS_PROJECT_ID: ${{ secrets.STARTER_CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.STARTER_CYPRESS_RECORD_KEY }}
          PERCY_TOKEN: ${{ secrets.STARTER_PERCY_TOKEN }}
          PERCY_PARALLEL_NONCE: ${{ needs.nonce.outputs.result }}
          PERCY_PARALLEL_TOTAL: 5
          COMMIT_INFO_BRANCH: ${{ github.head_ref }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}